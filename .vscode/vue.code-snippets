{
  "Vue Component": {
    "prefix": "vc",
    "body": [
      "<template>",
      "  <div>${1:ComponentName}</div>",
      "</template>",
      "",
      "<script>",
      "import { defineComponent } from 'vue';",
      "",
      "export default defineComponent({",
      "  name: '${1:ComponentName}',",
      "",
      "  /**",
      "   * 属性",
      "   */",
      "  props: {},",
      "",
      "  /**",
      "   * 数据",
      "   */",
      "  data() {",
      "    return {};",
      "  },",
      "",
      "  /**",
      "   * 计算属性",
      "   */",
      "  computed: {},",
      "",
      "  /**",
      "   * 已创建",
      "   */",
      "  created() {",
      "  // ",
      "  },",
      "",
      "  /**",
      "   * 组件方法",
      "   */",
      "  methods: {},",
      "",
      "  /**",
      "   * 使用组件",
      "   */",
      "  components: {},",
      "});",
      "</script>",
      "",
      "<style scoped></style>",
      ""
    ]
  },
  "Vue Component: with vuex": {
    "prefix": "vcx",
    "body": [
      "<template>",
      "  <div>${1:ComponentName}</div>",
      "</template>",
      "",
      "<script>",
      "import { defineComponent } from 'vue';",
      "import { mapGetters, mapActions } from 'vuex';",
      "",
      "export default defineComponent({",
      "  name: '${1:ComponentName}',",
      "",
      "  /**",
      "   * 属性",
      "   */",
      "  props: {},",
      "",
      "  /**",
      "   * 数据",
      "   */",
      "  data() {",
      "    return {};",
      "  },",
      "",
      "  /**",
      "   * 计算属性",
      "   */",
      "  computed: {",
      "    ...mapGetters({${2}})",
      "  },",
      "",
      "  /**",
      "   * 已创建",
      "   */",
      "  created() {",
      "  // ",
      "  },",
      "",
      "  /**",
      "   * 组件方法",
      "   */",
      "  methods: {",
      "    ...mapActions({${3}})",
      "  },",
      "",
      "  /**",
      "   * 使用组件",
      "   */",
      "  components: {},",
      "});",
      "</script>",
      "",
      "<style scoped></style>",
      ""
    ]
  },
  "Vue Store": {
    "prefix": "vs",
    "body": [
      "import { Module } from 'vuex';",
      "import { RootState } from '@/app/app.store';",
      "",
      "export interface ${1:StoreState} {",
      "  ",
      "}",
      "",
      "export const ${2:storeModule}: Module<${1:StoreState}, RootState> = {",
      "  /**",
      "   * 命名空间",
      "   */",
      "  namespaced: true,",
      "",
      "  /**",
      "   * 数据",
      "   */",
      "  state: {",
      "  ",
      "  } as ${1:StoreState},",
      "",
      "  /**",
      "   * 获取器",
      "   */",
      "  getters: {",
      "   ",
      "  },",
      "",
      "  /**",
      "   * 修改器",
      "   */",
      "  mutations: {",
      "",
      "  },",
      "",
      "  /**",
      "   * 动作",
      "   */",
      "  actions: {",
      "",
      "  },",
      "};",
      "",
    ]
  },
  "Vue Store: with loading state": {
    "prefix": "vsl",
    "body": [
      "import { Module } from 'vuex';",
      "import { RootState } from '@/app/app.store';",
      "import { apiHttpClient } from '@/app/app.service';",
      "",
      "export interface ${1:StoreState} {",
      "  loading: boolean;",
      "}",
      "",
      "export const ${2:storeModule}: Module<${1:StoreState}, RootState> = {",
      "  /**",
      "   * 命名空间",
      "   */",
      "  namespaced: true,",
      "",
      "  /**",
      "   * 数据",
      "   */",
      "  state: {",
      "    loading: false,",
      "  } as ${1:StoreState},",
      "",
      "  /**",
      "   * 获取器",
      "   */",
      "  getters: {",
      "    loading(state) {",
      "      return state.loading;",
      "    },",
      "  },",
      "",
      "  /**",
      "   * 修改器",
      "   */",
      "  mutations: {",
      "    setLoading(state, data) {",
      "      state.loading = data;",
      "    },",
      "  },",
      "",
      "  /**",
      "   * 动作",
      "   */",
      "  actions: {",
      "    async ${3:actionName}({ commit }) {",
      "      commit('setLoading', true);",
      "",
      "      try {",
      "        const response = await apiHttpClient.get('${4:apiURL}');",
      "        commit('setPosts', response.data);",
      "        commit('setLoading', false);",
      "",
      "        return response;",
      "      } catch (error) {",
      "        commit('setLoading', false);",
      "",
      "        throw error.response;",
      "      }",
      "    },    ",
      "  },",
      "};",
    ]
  },
  "Vue Routes": {
    "prefix": "vr",
    "body": [
      "import { RouteRecordRaw } from 'vue-router';",
      "import ${3:RouteComponent} from '${4:RouteComponentLocation}';",
      "",
      "/**",
      " * 定义路由",
      " */",
      "const routes: Array<RouteRecordRaw> = [",
      "  {",
      "    name: '${1:routeName}',",
      "    path: '${2:routeURL}',",
      "    component: ${3:RouteComponent},",
      "    props: true,",
      "  },",
      "];",
      "",
      "/**",
      " * 默认导出",
      " */",
      "export default routes;",
      "",
    ]
  }
}
